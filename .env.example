# # Move to the app's directory:
cd platform-demo-app

# Create .env from the starter template:
cp .env.example .env

# Edit the resulting file:
vi .env
# or:
nano .env

#
#
#

Frontend app URL and bare domain name:
FRONTEND_URL=https://frontend.example.com
FRONTEND_DOMAIN_NAME=frontend.example.com

# Backend app URL and bare domain name:
BACKEND_URL=https://backend.example.com
BACKEND_DOMAIN_NAME=backend.example.com


# Obtain the following 2 values on the Pi Developer Portal (open develop.pi in the Pi Browser).

# # Add your Domain Validation Key here:
DOMAIN_VALIDATION_KEY=kspsuejw0wui2futwmxjcizsnijkyqe05fcdjeoahmi49q5xssjr4ptb0dqpojhp

# Add your API key here:
PI_API_KEY=kspsuejw0wui2futwmxjcizsnijkyqe05fcdjeoahmi49q5xssjr4ptb0dqpojhp

# Generate a random string, or roll your face on the keyboard to fill this value:
SESSION_SECRET=abcd1324_TODO

# # Generate a secure password for your MongoDB database and paste it here:
MONGODB_PASSWORD=

# Generate a random string (e.g 64 alphanumeric characters) and paste it here:
SESSION_SECRET=


# This will be prepended to all container names.
# docker-compose build
docker-compose up -d

docker ps
docker-compose ps
# Set this to either "development" or "production" (XXX "staging"?):
ENVIRONMENT=production

# This directory will be used to store all persistent data needed by Docker (using volumes):
DATA_DIRECTORY=./docker-data

# docker-compose logs -f <service-name>

# e.g:
docker-compose logs -f reverse-proxy
